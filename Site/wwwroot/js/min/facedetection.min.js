async function faceDetection(n,t,i){faceapi.matchDimensions(n,t,!0);const r=await faceapi.detectAllFaces(t,new faceapi.TinyFaceDetectorOptions).withFaceLandmarks(),u=n.getContext("2d");if(u.clearRect(0,0,n.width,n.height),r.length>0){const n=r[0].detection.box;return rectangleOverFace(u,n),checkFaceApproach(n,i)}}function rectangleOverFace(n,t){const i=t.width*scale,r=t.height*scale,u=t.x-(i-t.width)/2,f=t.y-(r-t.height)/2+10;n.beginPath();n.setLineDash([5,3]);n.rect(u,f,i,r);n.lineWidth=2;n.strokeStyle="white";n.stroke()}function expressionLines(n,t){if(t[0].landmarks){const i=t[0].landmarks.positions;n.strokeStyle="red";n.setLineDash([2,2]);n.beginPath();n.moveTo(i[0].x,i[0].y);for(let t=1;t<i.length;t++)n.lineTo(i[t].x,i[t].y);n.closePath();n.stroke()}}function checkFaceApproach(n,t){if(!captureActive)return!1;const r=210,u=Math.max(n.width,n.height);let i=Math.round(u*100/r);return(i=i>100?100:i,drawProgressBar(t,i),u>r)?!0:!1}function drawProgressBar(n,t){n.style=`width: ${t}%`;n.setAttribute("aria-valuenow",t);n.innerHTML=t+"%"}async function getImage(n,t){const i=await faceapi.detectSingleFace(n,t).withFaceLandmarks().withFaceDescriptor();if(i){const t=i.detection.box,u=t.width*scale,f=t.height*scale,e=t.x-(u-t.width)/2,o=t.y-(f-t.height)/2-40,r=document.createElement("canvas");r.width=u;r.height=f;const s=r.getContext("2d");return s.drawImage(n,e,o,u,f,0,0,r.width,r.height),r.toDataURL("image/png")}return null}let captureActive=!0;const scale=1.5;